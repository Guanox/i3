#!/bin/bash

# default values
let temp_low=30;
let temp_warn=70;
let temp_crit=85;

color_low="#81CAE6"
color_warn="#FFB347"
color_crit="#C23B22"

color="#C9CCDB"

TEMP_DEVICE="${BLOCK_INSTANCE:-Core}"
TEMP_OUTPUT=$(sensors | grep "${TEMP_DEVICE}")

IS_URGENT=0

TOTAL_TEMP=0
TOTAL_COUNT=0
while read RESULT_LINE; do
  TOTAL_COUNT=$((TOTAL_COUNT +1))
  CURRENT_TEMP=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '1p' | tr -d '+°C')
  URGENT_VALUE=$(echo "${RESULT_LINE}" | grep -o -E "[\+\-]?[0-9]*.[0-9]*°C" | sed -n '2p' | tr -d '+°C')

  TOTAL_TEMP=$(echo "scale=2;${TOTAL_TEMP}+${CURRENT_TEMP}" | bc -l)
  IS_CRITICAL=$(echo "scale=0;${CURRENT_TEMP}-${URGENT_VALUE} >= 0" | bc -l)

  if [[ "${IS_CRITICAL}" -eq 1 ]]; then
    IS_URGENT=1
  fi
done <<< "$(echo -e "$TEMP_OUTPUT")"

AVERAGE_TEMP=$(echo "scale=0;${TOTAL_TEMP}/${TOTAL_COUNT}" | bc -l)

text="${AVERAGE_TEMP}°C"

if [[ "$AVERAGE_TEMP" -gt "$temp_crit" ]]; then
    color="$color_crit"
elif [[ "$AVERAGE_TEMP" -gt "$temp_warn" ]]; then
    color="$color_warn"
elif [[ "$AVERAGE_TEMP" -le "$temp_low" ]]; then
    color="$color_low"
fi

cat <<EOF
{
    "full_text": "${text}",
    "color": "$color",
    "background": "",
    "border": "",
    "border_left": 0,
    "border_right": 0,
    "border_up": 0,
    "border_bottom": 0
}
EOF
